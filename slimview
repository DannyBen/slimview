#!/usr/bin/env ruby
# Serve or save slim files
#
# Usage:
#   slimview          # serve in current directory
#   slimview save     # save all *.slim files as html
#
require 'slim'

Slim::Engine.set_options pretty: true

if ARGV[0] == 'save'
  files = Dir["*.slim"]
  files.each do |path|
    slim_code = File.read path
    html = Slim::Template.new { slim_code }.render
    out_path = "#{File.basename(path, '.slim')}.html"
    File.write out_path, html
    puts "saved #{out_path}"
  end
  exit
end

require 'sinatra'

set :bind, '0.0.0.0'
set :port, ENV['PORT'] || 3000
set :views, Dir.pwd
set :public_folder, Dir.pwd

helpers do
  def partial(template, params={})
    slim "partials/#{template}".to_sym, params
  end
end

get '/' do
  files = Dir["*.slim"]
  redirect File.basename(files.first, '.slim') if files.count == 1 
  result = ["<style>* { font-family: arial; text-align: center; font-size: 20px; line-height: 1.5; }</style>"]
  files.each do |file|
    basename = File.basename file, ".slim"
    result << %Q[<a href="#{basename}">#{basename}</a><br>]
  end
  result.join "\n"
end

get '/*' do
  page = params[:splat].first
  halt 404 unless File.exist? "#{page}.slim"
  slim page.to_sym
end

